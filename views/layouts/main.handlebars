<!doctype html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width">
  <title>{{title }}</title>
  <link href="images/favicon.ico" rel="icon" type="image/x-icon">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&family=Oswald:wght@400;700&family=Quicksand:wght@400;700&family=Work+Sans:wght@400;700;800&display=swap" rel="stylesheet">
  <link href="css/Chunkfive.otf">
  <link href="//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
  <link rel="stylesheet" href="css/style.css">
</head>

<!-- set the default theme here-->
<body class="retro-theme">
  {{{body}}}

  <script src="js/clickEvents.js"></script>

  <!--script belonging to menu.handlebars-->
  <script>
    const channels = [
      {
        name: "One", path: "", menuSelector: ".menu__item--default", active: false, logo: "logo--one"
      },
      {
        name: "Two", path: "two", menuSelector: ".menu__item--two", active: false, logo: "logo--two"
      },
      {
        name: "Western", path: "western", menuSelector: ".menu__item--western", active: false, logo: "logo--western"
      },
      {
        name: "Sci-Fi", path: "scifi", menuSelector: ".menu__item--scifi", active: false, logo: "logo--scifi"
      },
      {
        name: "Classics", path: "classics", menuSelector: ".menu__item--classics", active: false, logo: "logo--classics"
      },
      {
        name: "MTV", path: "mtv", menuSelector: ".menu__item--mtv", active: false, logo: "logo--mtv"
      },
      {
        name: "Horror", path: "horror", menuSelector: ".menu__item--horror", active: false, logo: "logo--horror"
      },
      {
        name: "Docs", path: "docs", menuSelector: ".menu__item--docs", active: false, logo: "logo--docs"
      },
      {
        name: "Action", path: "action", menuSelector: ".menu__item--action", active: false, logo: "logo--action"
      }
    ];

    let path = window.location.pathname;
    path = path.slice(1, path.length);
    const activeChannel = channels.find(channel => channel.path === path);
    const logoEl = document.querySelector(".logo");
    logoEl.classList.add(activeChannel.logo);
    logoEl.innerText = activeChannel.name;
    document.querySelector(activeChannel.menuSelector).classList.add("menu__item--active");
    const channelDropdown = document.querySelector("#channelDropdown");
    const matchingOption = [...channelDropdown.options].find(option => option.innerText === activeChannel.name);
    const matchingIndex = [...channelDropdown.options].indexOf(matchingOption);
    channelDropdown.selectedIndex = matchingIndex;

    if (activeChannel.path === "mtv") {
      document.querySelector(".mtv-logo").classList.remove("mtv-logo--hidden");
    }

    function selectChannelByDropdown(ev) {
      document.getElementById("player").remove();
      console.log("switching channel to", document.querySelector("#channelDropdown").value);
      window.location.href = document.querySelector("#channelDropdown").value;
    }

    var muteToggles = [...document.querySelectorAll('.mute-toggle')];
    var soundCached = localStorage["ytPlayerSound"];

    muteToggles.forEach((toggleButton) => toggleButton.addEventListener("click", toggleMute));

    function unMute(target) {
      player.unMute();
      localStorage["ytPlayerSound"] = "on";
      const buttonElement = target.classList.contains("mute-toggle") ? target : target.closest(".mute-toggle");
      buttonElement.querySelector("i").className = 'fa fa-volume-down';
      buttonElement.querySelector("span").innerText = 'Mute';
      localStorage.setItem("muteSound", false);
    }
    function mute(target) {
      player.mute();
      localStorage["ytPlayerSound"] = "off";
      const buttonElement = target.classList.contains("mute-toggle") ? target : target.closest(".mute-toggle");
      buttonElement.querySelector("i").className = 'fa fa-volume-off';
      buttonElement.querySelector("span").innerText = 'Unmute';
      localStorage.setItem("muteSound", true);
    }
    function toggleMute(ev) {
      if (player.isMuted())
        unMute(ev.target);
      else
        mute(ev.target);
    }
  </script>

  {{#if googleAnalyticsId}}
    <!-- GoogleAnalytics4 -->
    <script async src="{{ googleAnalyticsScriptUrl }}"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag("js", new Date());

      gtag("config", "{{ googleAnalyticsId }}");
    </script>
  {{/if}}
</body>

</html>